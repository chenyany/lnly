<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lnly.common.dao.CountryCompensationDetailMapper">
    <resultMap id="BaseResultMap" type="com.lnly.common.model.CountryCompensationDetail">


        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="year" property="year" jdbcType="BIGINT"/>
        <result column="city" property="city" jdbcType="VARCHAR"/>
        <result column="county" property="county" jdbcType="VARCHAR"/>
        <result column="town" property="town" jdbcType="VARCHAR"/>
        <result column="village" property="village" jdbcType="VARCHAR"/>
        <result column="forest_class" property="forestClass" jdbcType="VARCHAR"/>
        <result column="small_class" property="smallClass" jdbcType="VARCHAR"/>
        <result column="little_class" property="littleClass" jdbcType="VARCHAR"/>
        <result column="land_class" property="landClass" jdbcType="VARCHAR"/>

        <result column="forest_belong" property="forestBelong" jdbcType="VARCHAR"/>
        <result column="land_belong" property="landBelong" jdbcType="VARCHAR"/>
        <result column="source" property="source" jdbcType="VARCHAR"/>

        <result column="belong_prove" property="belongProve" jdbcType="VARCHAR"/>
        <result column="identity_card" property="identityCard" jdbcType="VARCHAR"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>

        <result column="unite_username" property="uniteUsername" jdbcType="VARCHAR"/>
        <result column="compensation_standard" property="compensationStandard" jdbcType="DOUBLE"/>
        <result column="compensation_amount" property="compensationAmount" jdbcType="DOUBLE"/>
        <result column="remit_num" property="remitNum" jdbcType="VARCHAR"/>
        <result column="remit_user_name" property="remitUserName" jdbcType="VARCHAR"/>
        <result column="send_flag" property="sendFlag" jdbcType="VARCHAR"/>
        <result column="check_flag" property="checkFlag" jdbcType="VARCHAR"/>
        <result column="area" property="area" jdbcType="DOUBLE"/>
        <result column="comment" property="comment" jdbcType="VARCHAR"/>
        <result column="create_user" property="createUser" jdbcType="VARCHAR"/>
        <result column="update_user" property="updateUser" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="delete_flag" property="deleteFlag" jdbcType="CHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, check_flag, city, county, town, village, forest_class, small_class, little_class, land_types, forest_belong, land_belong, source, belong_prove, identity_card, username, unite_username, year, area, compensation_standard, compensation_amount, remit_num, remit_user_name, send_flag, comment, create_user, update_user, create_time, update_time, delete_flag
  </sql>
    <sql id="limit_sql">
        <if test="page_sql != null and page_sql != ''">
            ${page_sql}
        </if>
    </sql>

    <sql id="where_all">
        <where>
            <if test="searchContent != null and searchContent !='' ">
                and (
                LOWER(city) like LOWER(CONCAT("%",#{searchContent,jdbcType=VARCHAR},"%")) or
                LOWER(county) like LOWER(CONCAT("%",#{searchContent,jdbcType=VARCHAR},"%"))
                )
            </if>
            <if test="year != null and year !='' ">
                and
                year = #{year,jdbcType=INTEGER}
            </if>
        </where>
    </sql>


    <select id="findAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_country_compensation_detail
        <include refid="where_all"/>
        <include refid="limit_sql"/>
    </select>
    <select id="findCount" resultMap="BaseResultMap">
        select count(id) from tb_country_compensation_detail
        <include refid="where_all"/>
    </select>


    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from tb_country_compensation_detail
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_country_compensation_detail
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.lnly.common.model.CountryCompensationDetail">
    insert into tb_country_compensation_detail (
        id,
        check_flag,
        city,
        county,
        town,
        village,

        forest_class,
        small_class,
        little_class,
        land_types,
        forest_belong,
        land_belong,

        source,
        belong_prove,
        identity_card,
        username,
        unite_username,
        year,

        area,
        compensation_standard,
        compensation_amount,
        remit_num,
        remit_user_name,

        send_flag,
        comment,
        create_user,
        update_user
      )
    values (
        #{id,jdbcType=BIGINT},
        #{checkFlag,jdbcType=VARCHAR},
        #{city,jdbcType=VARCHAR},
        #{county,jdbcType=VARCHAR},
        #{town,jdbcType=VARCHAR},
        #{village,jdbcType=VARCHAR},

        #{forestClass,jdbcType=BIGINT},
        #{smallClass,jdbcType=VARCHAR},
        #{littleClass,jdbcType=VARCHAR},
        #{landTypes,jdbcType=VARCHAR},
        #{forestBelong,jdbcType=VARCHAR},
        #{landBelong,jdbcType=VARCHAR},

        #{source,jdbcType=VARCHAR},
        #{belongProve,jdbcType=VARCHAR},
        #{identityCard,jdbcType=VARCHAR},
        #{username,jdbcType=VARCHAR},
        #{uniteUsername,jdbcType=VARCHAR},
        #{year,jdbcType=VARCHAR},

        #{area,jdbcType=DOUBLE},
        #{compensationStandard,jdbcType=DOUBLE},
        #{compensationAmount,jdbcType=DOUBLE},
        #{remitNum,jdbcType=VARCHAR},
        #{remit_user_name,jdbcType=VARCHAR},

        #{send_flag,jdbcType=VARCHAR},
        #{comment,jdbcType=VARCHAR},
        #{createUser,jdbcType=VARCHAR},
        #{updateUser,jdbcType=VARCHAR}

      )
  </insert>


    <update id="updateByPrimaryKey" parameterType="com.lnly.common.model.CountryCompensationDetail">
    update tb_country_compensation_detail
    set
        #{checkFlag,jdbcType=VARCHAR},
        #{city,jdbcType=VARCHAR},
        #{county,jdbcType=VARCHAR},
        #{town,jdbcType=VARCHAR},
        #{village,jdbcType=VARCHAR},
        #{forestClass,jdbcType=BIGINT},
        #{smallClass,jdbcType=VARCHAR},
        #{littleClass,jdbcType=VARCHAR},
        #{landTypes,jdbcType=VARCHAR},
        #{forestBelong,jdbcType=VARCHAR},
        #{landBelong,jdbcType=VARCHAR},
        #{source,jdbcType=VARCHAR},
        #{belongProve,jdbcType=VARCHAR},
        #{identityCard,jdbcType=VARCHAR},
        #{username,jdbcType=VARCHAR},
        #{uniteUsername,jdbcType=VARCHAR},
        #{year,jdbcType=VARCHAR},
        #{area,jdbcType=DOUBLE},
        #{compensationStandard,jdbcType=DOUBLE},
        #{compensationAmount,jdbcType=DOUBLE},
        #{remitNum,jdbcType=VARCHAR},
        #{remit_user_name,jdbcType=VARCHAR},
        #{send_flag,jdbcType=VARCHAR},
        #{comment,jdbcType=VARCHAR},
        #{updateUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
