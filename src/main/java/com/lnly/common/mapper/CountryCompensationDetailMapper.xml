<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lnly.common.dao.CountryCompensationStandardMapper">
    <resultMap id="BaseResultMap" type="com.lnly.common.model.CountryCompensationStandard">


        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="year" property="year" jdbcType="BIGINT"/>
        <result column="city" property="city" jdbcType="VARCHAR"/>
        <result column="county" property="county" jdbcType="VARCHAR"/>
        <result column="town" property="town" jdbcType="VARCHAR"/>
        <result column="village" property="village" jdbcType="VARCHAR"/>
        <result column="forest_class" property="forestClass" jdbcType="VARCHAR"/>
        <result column="small_class" property="smallClass" jdbcType="VARCHAR"/>
        <result column="little_class" property="littleClass" jdbcType="VARCHAR"/>
        <result column="land_class" property="landClass" jdbcType="VARCHAR"/>

        <result column="forest_belong" property="forestBelong" jdbcType="VARCHAR"/>
        <result column="land_belong" property="landBelong" jdbcType="VARCHAR"/>
        <result column="source" property="source" jdbcType="VARCHAR"/>

        <result column="belong_prove" property="belongProve" jdbcType="VARCHAR"/>
        <result column="identity_card" property="identityCard" jdbcType="VARCHAR"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>

        <result column="unite_username" property="uniteUsername" jdbcType="VARCHAR"/>
        <result column="compensation_Standard" property="compensationStandard" jdbcType="DOUBLE"/>
        <result column="compensation_amount" property="compensationAmount" jdbcType="DOUBLE"/>
        <result column="remitNum" property="remitNum" jdbcType="VARCHAR"/>
        <result column="remit_user_name" property="remitUserName" jdbcType="VARCHAR"/>
        <result column="send_flag" property="sendFlag" jdbcType="VARCHAR"/>
        <result column="check_flag" property="checkFlag" jdbcType="VARCHAR"/>
        <result column="area" property="area" jdbcType="DOUBLE"/>
        <result column="comment" property="comment" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="BIGINT"/>
        <result column="create_user" property="createUser" jdbcType="VARCHAR"/>
        <result column="update_user" property="updateUser" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="delete_flag" property="deleteFlag" jdbcType="CHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, check_flag, city, county, town, village, forest_class, small_class, little_class, land_types, forest_belong, land_belong, source, belong_prove, identity_card, username, unite_username, year, area, compensation_standard, compensation_amount, remit_num, remit_user_name, send_flag, comment, create_user, update_user, create_time, update_time, delete_flag
  </sql>
    <sql id="limit_sql">
        <if test="page_sql != null and page_sql != ''">
            ${page_sql}
        </if>
    </sql>

    <sql id="where_all">
        <where>
            <if test="searchContent != null and searchContent !='' ">
                and (
                LOWER(city) like LOWER(CONCAT("%",#{searchContent,jdbcType=VARCHAR},"%")) or
                LOWER(county) like LOWER(CONCAT("%",#{searchContent,jdbcType=VARCHAR},"%"))
                )
            </if>
            <if test="year != null and year !='' ">
                and
                year = #{year,jdbcType=INTEGER}
            </if>
        </where>
    </sql>


    <select id="findAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_country_compensation_detail
        <include refid="where_all"/>
        <include refid="limit_sql"/>
    </select>
    <select id="findCount" resultMap="BaseResultMap">
        select count(id) from tb_country_compensation_detail
        <include refid="where_all"/>
    </select>


    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from tb_country_compensation_detail
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_country_compensation_detail
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.lnly.common.model.CountryCompensationStandard">
    insert into tb_country_compensation_detail ( id, check_flag, city, county, town, village, forest_class, small_class, little_class, land_types, forest_belong, land_belong, source, belong_prove, identity_card, username, unite_username, year, area, compensation_standard, compensation_amount, remit_num, remit_user_name, send_flag, comment, create_user, update_user, create_time, update_time, delete_flag
      )
    values (
        #{id,jdbcType=BIGINT},
        #{checkFlag,jdbcType=VARCHAR},
        #{city,jdbcType=VARCHAR},
        #{county,jdbcType=VARCHAR},
        #{town,jdbcType=VARCHAR},
        #{village,jdbcType=VARCHAR},
        #{forestClass,jdbcType=BIGINT},
        #{smallClass,jdbcType=VARCHAR},
        #{littleClass,jdbcType=VARCHAR},
        #{landTypes,jdbcType=VARCHAR},
        #{forestBelong,jdbcType=VARCHAR},
        #{landBelong,jdbcType=VARCHAR},
        #{source,jdbcType=VARCHAR},
        #{belongProve,jdbcType=VARCHAR},
        #{identityCard,jdbcType=VARCHAR},
        #{username,jdbcType=VARCHAR},
        #{uniteUsername,jdbcType=VARCHAR},
        #{year,jdbcType=VARCHAR},
        #{area,jdbcType=DOUBLE},
        #{compensationStandard,jdbcType=DOUBLE},
        #{compensationAmount,jdbcType=DOUBLE},
        #{remitNum,jdbcType=VARCHAR},
        #{remit_user_name,jdbcType=VARCHAR},
        #{send_flag,jdbcType=VARCHAR},
        #{comment,jdbcType=VARCHAR},
        '0',
        #{createUser,jdbcType=VARCHAR},
        #{updateUser,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.lnly.common.model.CountryCompensationStandard">
        insert into tb_country_compensation_detail
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="year != null">
                year,
            </if>
            <if test="city != null">
                city,
            </if>
            <if test="county != null">
                county,
            </if>
            <if test="area != null">
                area,
            </if>
            <if test="countryZbje != null">
                country_zbje,
            </if>
            <if test="otherZbje != null">
                other_zbje,
            </if>
            <if test="comment != null">
                comment,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="updateUser != null">
                update_user,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="year != null">
                #{year,jdbcType=BIGINT},
            </if>
            <if test="city != null">
                #{city,jdbcType=VARCHAR},
            </if>
            <if test="county != null">
                #{county,jdbcType=VARCHAR},
            </if>

            <if test="area != null">
                #{area,jdbcType=DOUBLE},
            </if>
            <if test="country_zbje != null">
                #{countryZbje,jdbcType=DOUBLE},
            </if>
            <if test="other_zbje != null">
                #{otherZbje,jdbcType=DOUBLE},
            </if>
            <if test="comment != null">
                #{comment,jdbcType=DOUBLE},
            </if>
            <if test="status != null">
                #{status,jdbcType=BIGINT},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="update_user != null">
                #{updateUser,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>

        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.lnly.common.model.CountryCompensationStandard">
        update tb_country_compensation_detail
        <set>
            <if test="year != null">
                year = #{year,jdbcType=BIGINT},
            </if>
            <if test="city != null">
                city = #{city,jdbcType=VARCHAR},
            </if>
            <if test="county != null">
                county = #{county,jdbcType=VARCHAR},
            </if>

            <if test="area != null">
                area = #{area,jdbcType=DOUBLE},
            </if>
            <if test="countryZbje != null">
                country_zbje = #{countryZbje,jdbcType=DOUBLE},
            </if>
            <if test="otherZbje != null">
                other_zbje = #{otherZbje,jdbcType=DOUBLE},
            </if>
            <if test="comment != null">
                comment = #{comment,jdbcType=DOUBLE},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=BIGINT},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lnly.common.model.CountryCompensationStandard">
    update tb_country_compensation_detail
    set year = #{year,jdbcType=BIGINT},
      city = #{city,jdbcType=VARCHAR},
      county = #{county,jdbcType=VARCHAR},
      area = #{area,jdbcType=DOUBLE},
       country_zbje = #{countryZbje,jdbcType=DOUBLE},
        other_zbje = #{otherZbje,jdbcType=DOUBLE},
         comment = #{comment,jdbcType=VARCHAR},
       status = #{status,jdbcType=BIGINT}
      update_time = #{updateTime,jdbcType=TIMESTAMP},

    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
